# Homework
1
docker --help
docker buils --help
docker run --help

2
docker run -it --entrypoint=bash python:3.9
pip list

# Prepare postgres
# changes made to datetime fields in ingest data script for green taxi trip
docker build -t green_taxi_ingest:v001 .
URL="https://github.com/DataTalksClub/nyc-tlc-data/releases/download/green/green_tripdata_2019-09.csv.gz"

docker run -it \
--network=pg-network \
green_taxi_ingest:v001 \
--user=root \
--pwd=root \
--host=pg-database \
--port=5432 \
--db=ny_taxi \
--tblnm=green_taxi_trips \
--url=${URL}

# changes made to unzip part in ingest data script for taxi zone lookup
docker build -t taxi_zone_lookup:v001 .
URL="https://s3.amazonaws.com/nyc-tlc/misc/taxi+_zone_lookup.csv"

docker run -it \
--network=pg-network \
taxi_zone_lookup:v001 \
--user=root \
--pwd=root \
--host=pg-database \
--port=5432 \
--db=ny_taxi \
--tblnm=taxi_zone_lookup \
--url=${URL}

3
select count(*) 
from green_taxi_trips 
where lpep_pickup_datetime >= '2019-09-18 00:00:00'
and lpep_dropoff_datetime <= '2019-09-18 23:59:59';

4
select osq.lpep_pickup_date 
from 
(select sq.lpep_pickup_date
, row_number() over(order by trip_distance desc) as rn
from 
(select cast(lpep_pickup_datetime as date) as lpep_pickup_date
, max(lpep_dropoff_datetime - lpep_pickup_datetime ) as trip_distance
from green_taxi_trips 
group by lpep_pickup_date) sq ) osq 
where rn = 1;

5
select sq."Borough" 
from 
(select pu."Borough"
, sum(total_amount) as total_amount
from green_taxi_trips gr,
taxi_zone_lookup pu,
taxi_zone_lookup dof 
where gr."PULocationID" = pu."LocationID"
and gr."DOLocationID" = dof."LocationID"
and cast(gr.lpep_pickup_datetime as date) = '2019-09-18'
and (pu."Borough" <> 'Unknown' 
	 or dof."Borough" <> 'Unknown')
group by 1 ) sq
where sq.total_amount > 50000;

6
select osq."Zone" 
from
(select sq."Zone"
, row_number() over(order by max_tip_amt desc) as rn 
from
(select dof."Zone"
, max(tip_amount) as max_tip_amt
from green_taxi_trips gr,
taxi_zone_lookup pu,
taxi_zone_lookup dof 
where gr."PULocationID" = pu."LocationID"
and gr."DOLocationID" = dof."LocationID"
and cast(gr.lpep_pickup_datetime as date) >= '2019-09-01'
and cast(gr.lpep_pickup_datetime as date) <= '2019-09-30'
and pu."Zone" = 'Astoria'
group by 1) sq ) osq  
where osq.rn = 1;

